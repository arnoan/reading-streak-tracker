"""
Django settings for aapo project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from environs import Env

env = Env()
env.read_env(".env")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY", default=None)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)

ALLOWED_HOSTS = []  # set in settings_production.py

# Application definition

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Required to set django.forms explicitly for form templates to work
    "django.forms",
]

THIRD_PARTY_APPS = [
    # django-allauth
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    # django browser reload
    "django_browser_reload",
    # crispy forms
    "crispy_forms",
    "crispy_tailwind",
]

PROJECT_APPS = ["apps.home", "apps.users", "apps.calendar", "apps.core"]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + PROJECT_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # django-allauth
    "allauth.account.middleware.AccountMiddleware",
    # django browser reload
    "django_browser_reload.middleware.BrowserReloadMiddleware",
]

ROOT_URLCONF = "aapo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / "templates",
            BASE_DIR / "templates/allauth_customized",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

WSGI_APPLICATION = "aapo.wsgi.application"

#############################################
# Django-Allauth & User Model Configuration #
#############################################

AUTH_USER_MODEL = "users.CustomUser"

AUTHENTICATION_BACKENDS = [
    # built-in django authentication backend (used for login to django admin)
    "django.contrib.auth.backends.ModelBackend",
    # backend for allauth-specific login process
    "allauth.account.auth_backends.AuthenticationBackend",
]

# Note:
# Try and keep the authentication process as frictionless as possible for now
# Require only username and single password entry (can reset manually if needed..)
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_EMAIL_REQUIRED = False  # disable "E-Mail" field for signup
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False  # disable password-confirmation field for signup

ACCOUNT_AUTHENTICATION_METHOD = "username"  # use username for login
ACCOUNT_SESSION_REMEMBER = True  # disable "Remember Me" checkbox on sign-in form

# Allow user to sign out without additional confirmation
ACCOUNT_LOGOUT_ON_GET = True

LOGIN_REDIRECT_URL = "/calendar"
ACCOUNT_LOGOUT_REDIRECT_URL = "/"

# Custom Signup Form (without the e-mail field)
ACCOUNT_FORMS = {"signup": "apps.users.forms.CustomSignupForm"}

# Project-wide form renderer to define the default template to use for forms
FORM_RENDERER = "apps.home.forms.CustomFormRenderer"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": env.dj_db_url("DATABASE_URL", default="sqlite:///db.sqlite3"),
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "static_root"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
